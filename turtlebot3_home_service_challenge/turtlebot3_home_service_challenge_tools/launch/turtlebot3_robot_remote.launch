<?xml version="1.0"?>
<launch>
  <arg name="address" default="192.168.0.240"/>
  <arg name="env_name" default="env.bash"/>
  <arg name="user_name" default="rnc"/>
  <arg name="password" default="0000"/>
  
  <arg name="use_robot_name" default="tb3_hsc"/>
  <arg name="set_lidar_frame_id" default="base_scan"/>
  
  <arg name="use_filter" default="true"/>
  
  <arg name="enable_raw" default="false"/>
  <arg name="enable_imv" default="false"/>
  <arg name="camera_id" default="0"/>
  <arg name="camera_frame_id" default="usb_cam"/>
  <arg name="camera_name" default="head_camera"/>
 
  <!-- setting for machine -->
  <machine name="tb3" address="$(arg address)" env-loader="~/$(arg env_name)" user="$(arg user_name)" password="$(arg password)" />

  <group ns="$(arg use_robot_name)">
    <param name="robot_description"
      command="$(find xacro)/xacro --inorder '$(find turtlebot3_manipulation_description)/urdf/turtlebot3_manipulation_robot.urdf.xacro'"/>

    <!-- packages for turtlebot3 -->
    <node machine="tb3" pkg="rosserial_python" type="serial_node.py" name="turtlebot3_core" output="screen">
      <param name="port" value="/dev/ttyACM0"/>
      <param name="baud" value="115200"/>
      <param name="tf_prefix" value="$(arg use_robot_name)"/>
    </node>
 
    <!-- lidar -->
    <node machine="tb3" pkg="rplidar_ros" type="rplidarNode" name="rplidarNode" output="screen">
    <param name="serial_port"         type="string" value="/dev/ttyUSB0"/>
    <param name="serial_baudrate"     type="int"    value="115200"/><!--A2 -->
    <!--param name="serial_baudrate"     type="int"    value="256000"--><!--A3 -->
    <param name="frame_id"            type="string" value="laser"/>
    <param name="inverted"            type="bool"   value="false"/>
    <param name="angle_compensate"    type="bool"   value="true"/>
    <remap if="$(arg use_filter)" from="scan" to="scan_raw"/>
    </node>
    
    <!-- laserscan filter -->
    <group if="$(arg use_filter)">
      <node name="laser_scan_filter_node" pkg="turtlebot3_home_service_challenge_tools" type="laser_scan_filter_node" respawn="false" output="screen">
        <param name="input_topic" value="/$(arg use_robot_name)/scan_raw"/>
        <param name="output_topic" value="/$(arg use_robot_name)/scan"/>
        <param name="mean_k" value="4"/>
        <param name="std_dev_mul" value="2"/>
      </node>  
    </group>

    <node machine="tb3" pkg="turtlebot3_bringup" type="turtlebot3_diagnostics" name="turtlebot3_diagnostics" output="screen"/>
    
    <!-- tf -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
       <param name="publish_frequency" type="double" value="100.0" />
       <param name="tf_prefix" value="$(arg use_robot_name)" />
    </node>

    <!-- rpi camera -->
  <node machine="tb3" type="usb_cam_node" pkg="usb_cam" name="head_camera_node" output="screen">
    <param name="video_device" value="/dev/video0" />
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap"/>

    <rosparam command="load" file="/home/intern1/.ros/camera_info/head_camera.yaml" />
    <param name="private_topics" value="true"/>
  
    <param name="enable_raw" value="$(arg enable_raw)"/>
    <param name="enable_imv" value="$(arg enable_imv)"/>
    <param name="camera_id" value="$(arg camera_id)"/>
  
    <param name="camera_name" value="$(arg camera_name)"/>
  </node>
  </group>

</launch>
